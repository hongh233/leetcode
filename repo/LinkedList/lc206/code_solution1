// iterative

package repo.LinkedList.lc206;

public class Solution206 {
    public static class ListNode {
        int val;
        ListNode next;
        ListNode() {}
        ListNode(int val) {
            this.val = val;
        }
        ListNode(int val, ListNode next) {
            this.val = val;
            this.next = next;
        }
    }
    public ListNode reverseList(ListNode head) {
        // list size = 0 or 1
        if (head == null || head.next == null) {
            return head;
        }

        ListNode prev = null;
        ListNode curr = head;

        while (true) {
            ListNode nextNode = curr.next; // pre-store
            curr.next = prev;
            prev = curr;

            if (nextNode == null) {
                break;
            }
            curr = nextNode;
        }

        return curr;
    }
}
